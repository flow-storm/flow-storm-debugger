{:paths ["src-inst" "src-dbg" "src-shared" "resources"]
 :deps {;; IMPORTANT !!
        ;; If adding any dependency for the `inst` part also add it on
        ;; build.clj jar-inst
        org.java-websocket/Java-WebSocket {:mvn/version "1.5.3"}
        com.cognitect/transit-clj {:mvn/version "1.0.333"}
        com.cognitect/transit-cljs {:mvn/version "0.8.280"}
        com.github.flow-storm/hansel {:mvn/version "0.1.84"}

        org.openjfx/javafx-controls {:mvn/version "21.0.4-ea+1"}
        org.openjfx/javafx-base {:mvn/version "21.0.4-ea+1"}
        org.openjfx/javafx-graphics {:mvn/version "21.0.4-ea+1"}
        org.openjfx/javafx-web {:mvn/version "21.0.4-ea+1"}

        org.kordamp.ikonli/ikonli-javafx {:mvn/version "12.3.1"}
        org.kordamp.ikonli/ikonli-materialdesign-pack {:mvn/version "12.3.1"}

        com.github.jpmonettas/j-system-theme-detector {:mvn/version "3.8.1"}
        nrepl/nrepl {:mvn/version "1.1.1"}
        org.clojure/data.int-map {:mvn/version "1.2.1"}
        org.fxmisc.richtext/richtextfx  {:mvn/version "0.11.1"}
        amalloy/ring-buffer {:mvn/version "1.3.1"}}

 :aliases {:cljs-storm {:classpath-overrides {org.clojure/clojurescript nil} ;; disable the official compiler
                        :extra-deps {thheller/shadow-cljs {:mvn/version "2.27.4"
                                                           :exclusions [org.clojure/clojurescript]}
                                     ;; bring ClojureScriptStorm
                                     com.github.flow-storm/clojurescript {:mvn/version "1.11.132-2"}
                                     ;; add FlowStorm runtime dep
                                     com.github.flow-storm/flow-storm-inst {:local/root "." #_#_:mvn/version "RELEASE"}
                                     cider/cider-nrepl {:mvn/version "0.28.3"}
                                     refactor-nrepl/refactor-nrepl {:mvn/version "3.5.2"}
                                     cider/piggieback {:mvn/version "0.5.2"}}
                        :jvm-opts ["-Dcljs.storm.instrumentOnlyPrefixes=dev"
                                   "-Dcljs.storm.instrumentEnable=true"]}

           :storm {:classpath-overrides {org.clojure/clojure nil}
                   :extra-deps {com.github.flow-storm/clojure {:mvn/version "1.12.1"}}
                   :jvm-opts ["-Dflowstorm.theme=dark"
                              "-Dclojure.storm.instrumentAutoPrefixes=false"
                              "-Dclojure.storm.instrumentOnlyPrefixes=dev-tester"
                              "-Dflowstorm.uiTimeoutMillis=1000"
                              "-Dflowstorm.jarEditorCommand=emacsclient -n +<<LINE>>:0 <<JAR>>/<<FILE>>"
                              "-Dflowstorm.fileEditorCommand=emacsclient -n +<<LINE>>:0 <<FILE>>"]}

           :fs-timelines-counters-plugin {:extra-deps {timelines-counters/timelines-counter {:local/root "./examples/plugins/basic-plugin/"}}
                                          :jvm-opts ["-Dflowstorm.plugins.namespaces.timelines-counters=flow-storm.plugins.timelines-counters.all"]}

           :dev {:extra-paths ["src-dev" "classes"]

                 :extra-deps {
                              org.openjfx/javafx-swing    {:mvn/version "21.0.4-ea+1"} ;; for scenic view to run
                              io.github.tonsky/clj-reload {:mvn/version "0.7.1"}
                              }
                 :jvm-opts ["-Dvisualvm.display.name=FlowStorm"
                            ;; for the profilers
                            "-Djdk.attach.allowAttachSelf" "-XX:+UnlockDiagnosticVMOptions" "-XX:+DebugNonSafepoints"]}
           :jvm-debugger {:jvm-opts ["-Xdebug" "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044"]}

           :build {:extra-deps {io.github.clojure/tools.build {:git/tag "v0.9.6" :git/sha "8e78bcc"}}
                   :ns-default build
                   :jvm-opts ["-Dcljfx.skip-javafx-initialization=true"] }

           :test {:extra-paths ["test"]
                  :extra-deps {lambdaisland/kaocha {:mvn/version "1.70.1086"}
                               org.clojure/clojurescript {:mvn/version "1.11.60"}}
                  :jvm-opts ["-Xmx10500m"]
                  :main-opts ["-m" "kaocha.runner"]}}}
